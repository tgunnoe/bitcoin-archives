version: "3.7"

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ./db:/var/lib/mysql # Use bind mount

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
    # PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.

    volumes:
    - ./:/var/www/html:cached

  crond:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_crond"
    environment:
      CRONTAB: "0 * * * * drush -r /var/www/html/web cron"
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0
    volumes:
    - ./:/var/www/html:cached

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
    - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
    #      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
    - ./:/var/www/html:cached

    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.tls.certresolver=myhttpchallenge"

  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: "${PROJECT_NAME}_mailhog"
  #   labels:
  #   - "traefik.enable=true"
  #   - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
  #   - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"
  #   - "traefik.http.routers.${PROJECT_NAME}_mailhog.entrypoints=websecure"
  #   - "traefik.http.routers.${PROJECT_NAME}_mailhog.tls.certresolver=myhttpchallenge"
  #   environment:
  #     MH_OUTGOING_SMTP: /home/smtp.json
  #   volumes:
  #   - ./mailhog:/home

  #  memcached:
  #    container_name: "${PROJECT_NAME}_memcached"
  #    image: wodby/memcached:$MEMCACHED_TAG

  opensmtpd:
    container_name: "${PROJECT_NAME}_opensmtpd"
    image: wodby/opensmtpd:$OPENSMTPD_TAG
    environment:
      RELAY_HOST: "${SMTP_RELAY_HOST}"
      RELAY_USER: "${SMTP_RELAY_USER}"
      RELAY_PASSWORD: "${SMTP_RELAY_PASSWORD}"

  # portainer:
  #   image: portainer/portainer
  #   container_name: "${PROJECT_NAME}_portainer"
  #   command: --no-auth -H unix:///var/run/docker.sock
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock
  #   labels:
  #   - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"
  #   - "traefik.http.routers.${PROJECT_NAME}_portainer.entrypoints=websecure"
  #   - "traefik.http.routers.${PROJECT_NAME}_portainer.tls.certresolver=myhttpchallenge"
   

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myhttpchallenge.acme.email=t@gvno.net"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    ports:
    - '443:443'
    # - '80:80'
    # - '8080:8080' # Dashboard
    volumes:
      - "./letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
      - "./traefik.toml:/etc/traefik.toml"
